<?xml version="1.0" encoding="UTF-8"?>
<tmfxml xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="xmlDefinition.xsd">
<!-- ***************************************************************************
* Copyright (c) 2016 Ericsson
*
* All rights reserved. This program and the accompanying materials are
* made available under the terms of the Eclipse Public License v1.0 which
* accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*************************************************************************** -->
    <timeGraphView id="xml.scenarios">
        <head>
            <analysis id="Scheduler Latency" />
            <label value="scenario" />
        </head>
<!--  FFA040 -->
        <definedValue name="PENDING" value="0" color="#CCCCCC"/>
        <definedValue name="IN_PROGRESS" value="1" color="#00CCFF"/>
        <definedValue name="MATCHED" value="2" color="#118811"/>
        <definedValue name="ABANDONED" value="3" color="#EE0000"/>

        <!-- Scenario view -->
        <entry path="scenarios/*">
            <display type="self" />
	    <name type="self" />
            <entry path="*">
                <display type="constant" value="status" />
                <name type="self" />
	    </entry>
        </entry>
    </timeGraphView>
    
    <pattern version="1" id="Scheduler Latency">
	<head>
		<traceType id="org.eclipse.linuxtools.lttng2.kernel.tracetype" />
		<label value="Scheduler Latency" />
	</head>
	
	<patternHandler>

<!-- 	Test if the TIDs -->
		<test id="TID">
			<if>
				<condition>
					<stateValue type="eventField" value="next_tid"/>
					<stateValue type="query">
						<stateAttribute type="constant" value="#CurrentScenario" />
						<stateAttribute type="constant" value="tid" />
					</stateValue>
				</condition>
			</if>
		</test>

<!-- Test that the task is blocking -->
		<test id="BLOCKING">
			<if>
				<condition op="ne">
					<stateValue type="eventField" value="prev_tid"/>
				    <stateAttribute type="long" value="0" />
				</condition>
			</if>
		</test>

<!-- 		ACTIONS -->

<!-- 	Generates three state changes in the state system -->
		<action id="save_context">
<!-- 		Save the context under the current scenario path -->
			<stateChange>
				<stateAttribute type="constant" value="#CurrentScenario" />
				<stateAttribute type="constant" value="comm" />
				<stateValue type="eventField" value="comm"/>
			</stateChange>
			<stateChange>
				<stateAttribute type="constant" value="#CurrentScenario" />
				<stateAttribute type="constant" value="tid" />
				<stateValue type="eventField" value="tid"/>
			</stateChange>
			<stateChange>
				<stateAttribute type="constant" value="#CurrentScenario" />
				<stateAttribute type="constant" value="prev_comm" />
				<stateValue type="eventField" value="context._procname"/>
			</stateChange>
		</action>

<!-- 	Generate a pattern segment -->
		<action id="gen_segment">
			<segment>
				<segType>
					<segName>
						<stateValue type="query">
							<stateAttribute type="constant" value="#CurrentScenario" />
							<stateAttribute type="constant" value="comm" />
						</stateValue>
					</segName>
				</segType>
				<segContent>
					<segField name="tid" type="long">
						<stateValue type="query">
							<stateAttribute type="constant" value="#CurrentScenario" />
							<stateAttribute type="constant" value="tid" />
						</stateValue>
					</segField>
					<segField name="prev_comm" type="long">
						<stateValue type="query">
							<stateAttribute type="constant" value="#CurrentScenario" />
							<stateAttribute type="constant" value="prev_comm" />
						</stateValue>
					</segField>
				</segContent>
			</segment>
		</action>

		<fsm id="wakingUp">
			<state id="s0">
				<transition event="sched_wakeup"
                            target="s1"
                            action="save_context"/>
			</state>
			<state id="s1">
				<transition event="sched_switch"
                            cond="TID"
                            target="end"
                            action="gen_segment"/>
			</state>
			<final id="end" />
		</fsm>
	</patternHandler>
</pattern>
</tmfxml>
